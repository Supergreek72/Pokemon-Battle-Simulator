//Dimitri Papadedes
//Dec 20th 2019
//main menu
package pokemongui;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.net.URL;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JFrame;


/**
 *
 * @author Dimitri Papadedes
 */
public class PokemonMenu extends JFrame
{

    //vairables
    private PokemonTeamBuilder teamBuilder;
    private PokemonChooseBattle chooseBattle;
    private Credits credits;
    static int numPokemon = 0, numMoves = 0;
    static boolean hasSave = true;
    static String[] pokemonString;
    Pokemon[] p;
    Move[] m;

  
    
    //read the file
    public static PrintWriter out;
    static File team1 = new File("src//pokemongui//team1.txt");
    
    //load pokemon in
    Pokemon[] poke;
    
    //sound 
    musicStuff buttonSound = new musicStuff();
    musicStuff music = new musicStuff();
    
    
     //sprites
    static ImageIcon pokeBallsprite;
    
    /**
     * Creates new form PokemonGUI
     */
    public PokemonMenu()
    {
        initComponents();
        //play intro music 
        music.playMusicLoop("Pok√©mon Red & Blue Music Opening Theme.wav");
        
        
        //center
        setLocationRelativeTo(null);
        
        //set the title words
        URL url = PokemonMenu.class.getResource("Pokemon-word.png");
        ImageIcon sprite = new ImageIcon(url);
        lblPoke.setIcon(sprite);
        url = PokemonMenu.class.getResource("Battle.png");
        sprite = new ImageIcon(url);
        lblBattle.setIcon(sprite);
        url = PokemonMenu.class.getResource("Sim.png");
        sprite = new ImageIcon(url);
        lblSim.setIcon(sprite);
        
        //set the icon of the frame
        url = PokemonMenu.class.getResource("pokeball.png");
        pokeBallsprite = new ImageIcon(url);
        setIconImage(pokeBallsprite.getImage());
        
        //set red in the middle
        url = PokemonMenu.class.getResource("Red.png");
        sprite = new ImageIcon(url);
        lblRed.setIcon(sprite);
        
        //set pikachu in the middle
        url = PokemonMenu.class.getResource("Start Pikachu.png");
        sprite = new ImageIcon(url);
        lblPikachu.setIcon(sprite);
        
        //set Charizard in the middle
        url = PokemonMenu.class.getResource("Start Charizard.png");
        sprite = new ImageIcon(url);
        lblCharizard.setIcon(sprite);
        
        //set snorlax in the middle
        url = PokemonMenu.class.getResource("Start Snorlax.png");
        sprite = new ImageIcon(url);
        lblSnorlax.setIcon(sprite);
        
        //set Blastoise in the middle
        url = PokemonMenu.class.getResource("Start Blastoise.png");
        sprite = new ImageIcon(url);
        lblBlastoise.setIcon(sprite);
        
        //set Venusaur in the middle
        url = PokemonMenu.class.getResource("Start Venusaur.png");
        sprite = new ImageIcon(url);
        lblVenusaur.setIcon(sprite);
        
        //read data files
        readPokemon();
        readMoves();

        //set default values of pokemon in data file
        pokemonString = new String[6];
        for (int j = 0; j < pokemonString.length; j++)
        {
            pokemonString[j] = " ";
        }
            
        //sort the moves by damage
        sort(m,0,m.length - 1);
        //sort the pokemon
        bubble(p);
        
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBattle = new javax.swing.JButton();
        lblPikachu = new javax.swing.JLabel();
        lblRed = new javax.swing.JLabel();
        lblBattle = new javax.swing.JLabel();
        lblPoke = new javax.swing.JLabel();
        lblSim = new javax.swing.JLabel();
        lblCharizard = new javax.swing.JLabel();
        lblSnorlax = new javax.swing.JLabel();
        lblBlastoise = new javax.swing.JLabel();
        lblVenusaur = new javax.swing.JLabel();
        btnCredits = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pokemon Battle Simulator");
        setBackground(java.awt.Color.lightGray);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        btnBattle.setBackground(new java.awt.Color(153, 153, 153));
        btnBattle.setFont(new java.awt.Font("Power Green", 1, 24)); // NOI18N
        btnBattle.setText("Battle");
        btnBattle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBattleActionPerformed(evt);
            }
        });

        lblBattle.setFont(new java.awt.Font("Euphemia UCAS", 1, 36)); // NOI18N
        lblBattle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBattle.setAlignmentX(0.5F);

        lblPoke.setFont(new java.awt.Font("Euphemia UCAS", 1, 36)); // NOI18N
        lblPoke.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPoke.setAlignmentX(0.5F);

        lblSim.setFont(new java.awt.Font("Euphemia UCAS", 1, 36)); // NOI18N
        lblSim.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSim.setAlignmentX(0.5F);

        btnCredits.setBackground(new java.awt.Color(153, 153, 153));
        btnCredits.setFont(new java.awt.Font("Power Green", 1, 24)); // NOI18N
        btnCredits.setText("Credits");
        btnCredits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreditsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(btnBattle, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCredits, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPoke, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(380, 380, 380)
                                .addComponent(lblBattle, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(140, 140, 140)
                                .addComponent(lblSnorlax, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblBlastoise, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(170, 170, 170)
                                .addComponent(lblCharizard, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(350, 350, 350)
                                .addComponent(lblVenusaur, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblRed, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(lblPikachu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(lblSim, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPoke, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBattle, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSnorlax, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblBlastoise, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblCharizard, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(lblVenusaur, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblRed, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(lblPikachu, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblSim, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBattle, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCredits, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBattleActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBattleActionPerformed
    {//GEN-HEADEREND:event_btnBattleActionPerformed
        //play sound
        buttonSound.playMusic("Pressing A Sound.wav");
        //switch screens
        if (chooseBattle == null)
        {
            chooseBattle = new PokemonChooseBattle(this,p, m);
        }
        
        chooseBattle.setVisible(true);
        this.setVisible(false);
        
        
    }//GEN-LAST:event_btnBattleActionPerformed

    private void btnCreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreditsActionPerformed
        //play sound
        buttonSound.playMusic("Pressing A Sound.wav");
        if (credits == null)
        {
            credits = new Credits(this);
        }

        credits.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_btnCreditsActionPerformed

    //Method to read the pokemon from the data file
    public void readPokemon()
    {
        InputStream pokemonsList = PokemonMenu.class.getResourceAsStream("pokemonData.txt");
        try
        {
            Scanner ps = new Scanner(pokemonsList);
            numPokemon = Integer.parseInt(ps.nextLine());
            p = new Pokemon[numPokemon];
            for (int i = 0; i < numPokemon; i++)
            {
                p[i] = new Pokemon(ps.nextLine(), Integer.parseInt(ps.nextLine()), Integer.parseInt(ps.nextLine()), Integer.parseInt(ps.nextLine()), Integer.parseInt(ps.nextLine()), Integer.parseInt(ps.nextLine()), Integer.parseInt(ps.nextLine()), ps.nextLine(), ps.nextLine());
            }
        } catch (Exception e)
        {
            System.out.println("Pokemon " + e);
        }
    }

    //Method to read the moves from the data file
    public void readMoves()
    {
        InputStream movesList = PokemonMenu.class.getResourceAsStream("moveData.txt");
        try
        {
            Scanner ms = new Scanner(movesList);
            numMoves = Integer.parseInt(ms.nextLine());
            m = new Move[numMoves];
            for (int i = 0; i < numMoves; i++)
            {
                m[i] = new Move(ms.nextLine(), Integer.parseInt(ms.nextLine()), Integer.parseInt(ms.nextLine()), Integer.parseInt(ms.nextLine()), ms.nextLine(), ms.nextLine());
            }
        } catch (Exception e)
        {
            System.out.println("Moves " + e);
        }
    }

    public void resetDataFile()
    {
        String[] resetPokemonString = new String[6];

        try
        {
            out = new PrintWriter(new FileWriter(team1));
            for (int j = 0; j < 6; j++)
            {
                resetPokemonString[j] = " ";
                out.println(resetPokemonString[j]);
            }
        } catch (IndexOutOfBoundsException e)
        {
            System.err.println("Caught IndexOutOfBoundsException: "
                    + e.getMessage());

        } catch (IOException e)
        {
            System.err.println("Caught IOException: " + e.getMessage());

        } finally
        {
            if (out != null)
            {
                out.close();

            }
            else
            {
                System.out.println("PrintWriter not open");
            }
        }
    }
    
    //for merge
     public static void sort(Move arr[], int l, int r){ 
         
         //if the left is less than the right
        if (l < r){ 
            
            //declare middle
            int middle = (l+r)/2; 
  
            //call sort method
            sort(arr, l, middle); 
            sort(arr , middle+1, r); 
  
            //call merge method
            merge(arr, l, middle, r); 
        } 
    } 
    
    //merge 
    public static void merge(Move arr[], int l, int m, int r){ 
        
        //declare variables 
        int n1 = m - l + 1; 
        int n2 = r - m; 
  
        //declare variables 
        Move Left[] = new Move[n1]; 
        Move Right[] = new Move[n2]; 
  
        
        //loop
        for(int i=0; i<n1; ++i){ 
            //set left[i]
            Left[i] = arr[l + i];
        }
        
        //loop
        for(int j=0; j<n2; ++j){ 
            //set Right[i]
            Right[j] = arr[m + 1+ j]; 
        }
  
        
  
         //declare variables
        int i = 0, j = 0;
        int o = l; 
        
        //loop 
        while (i < n1 && j < n2){
            
            //check if left it smaller than right
            if (Left[i].getDamage() <= Right[j].getDamage()){ 
                arr[o] = Left[i]; 
                i++; 
            } 
            else{ 
                //add to the main array
                arr[o] = Right[j]; 
                //add to j
                j++; 
            } 
            //add to o
            o++; 
        } 
  
        
        //loop
        while (i < n1){ 
            //add to the main array
            arr[o] = Left[i]; 
            //add
            i++; 
            o++; 
        } 
  
        //loop
        while (j < n2){ 
            //add to the main array
            arr[o] = Right[j]; 
            //add
            j++; 
            o++; 
        } 
    } 
    
     //bubble sort
    public static void bubble(Pokemon[] arr){
        //variables
        int n = arr.length;
        boolean swapped = true;
        Pokemon temp;
        //loop when it has swapped
        while(swapped){
            swapped = false;
            //loop the through the array
            for (int j = 1; j < n; j++) {
                
                //if its bigger
                if(arr[j - 1].getName().compareTo(arr[j].getName()) > 0 ){
                    
                    //swap
                    temp = arr[j - 1];
                    arr[j - 1] = arr[j];
                    arr[j] = temp;
                    swapped = true;
                }
                
            }
        }
    
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(PokemonMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(PokemonMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(PokemonMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(PokemonMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new PokemonMenu().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBattle;
    private javax.swing.JButton btnCredits;
    private javax.swing.JLabel lblBattle;
    private javax.swing.JLabel lblBlastoise;
    private javax.swing.JLabel lblCharizard;
    private javax.swing.JLabel lblPikachu;
    private javax.swing.JLabel lblPoke;
    private javax.swing.JLabel lblRed;
    private javax.swing.JLabel lblSim;
    private javax.swing.JLabel lblSnorlax;
    private javax.swing.JLabel lblVenusaur;
    // End of variables declaration//GEN-END:variables
}
